{"ast":null,"code":"var _jsxFileName = \"/home/erikpeteri/FullStackOpen/osa6/redux-anecdotes/src/components/Notification.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearNotification } from '../reducers/notificationReducer'; // Assuming you have the action defined\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notification = () => {\n  _s();\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.notification);\n  const style = {\n    border: 'solid',\n    padding: 10,\n    borderWidth: 1\n  };\n  useEffect(() => {\n    // Set a timeout to clear the notification after 5 seconds\n    const timeoutId = setTimeout(() => {\n      dispatch(clearNotification());\n    }, 5000); // 5000 milliseconds = 5 seconds\n\n    // Cleanup function to clear the timeout if the component unmounts\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style,\n    children: notification\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Notification, \"rmfMg38MXAVigrEgmB1qG2gCEDw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Notification;\nexport default Notification;\nvar _c;\n$RefreshReg$(_c, \"Notification\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","clearNotification","Notification","dispatch","notification","state","style","border","padding","borderWidth","timeoutId","setTimeout","clearTimeout"],"sources":["/home/erikpeteri/FullStackOpen/osa6/redux-anecdotes/src/components/Notification.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { clearNotification } from '../reducers/notificationReducer'; // Assuming you have the action defined\n\nconst Notification = () => {\n  const dispatch = useDispatch();\n  const notification = useSelector((state) => state.notification);\n  const style = {\n    border: 'solid',\n    padding: 10,\n    borderWidth: 1,\n  };\n\n  useEffect(() => {\n    // Set a timeout to clear the notification after 5 seconds\n    const timeoutId = setTimeout(() => {\n      dispatch(clearNotification());\n    }, 5000); // 5000 milliseconds = 5 seconds\n\n    // Cleanup function to clear the timeout if the component unmounts\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [dispatch]);\n\n  return (\n    <div style={style}>\n      {notification}\n    </div>\n  );\n};\n\nexport default Notification;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,iBAAiB,QAAQ,iCAAiC,CAAC,CAAC;AAAA;AAErE,MAAMC,YAAY,GAAG,MAAM;EAAA;EACzB,MAAMC,QAAQ,GAAGH,WAAW,EAAE;EAC9B,MAAMI,YAAY,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;EAC/D,MAAME,KAAK,GAAG;IACZC,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCR,QAAQ,CAACF,iBAAiB,EAAE,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAM;MACXW,YAAY,CAACF,SAAS,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEd,oBACE;IAAK,KAAK,EAAEG,KAAM;IAAA,UACfF;EAAY;IAAA;IAAA;IAAA;EAAA,QACT;AAEV,CAAC;AAAC,GA1BIF,YAAY;EAAA,QACCF,WAAW,EACPD,WAAW;AAAA;AAAA,KAF5BG,YAAY;AA4BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}