{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst anecdotesAtStart = ['If it hurts, do it more often', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'];\nconst getId = () => (100000 * Math.random()).toFixed(0);\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\nexport const incrementVote = id => {\n  return {\n    type: 'VOTE',\n    payload: {\n      id: id\n    }\n  };\n};\nexport const createAnecdote = content => {\n  return {\n    type: 'NEW_ANECDOTE',\n    payload: {\n      content,\n      id: getId(),\n      votes: 0\n    }\n  };\n};\nconst initialState = anecdotesAtStart.map(asObject);\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: initialState,\n  reducers: {\n    incrementVote: (state, action) => {\n      const id = action.payload.id;\n      const anecdote = state.find(anecdote => anecdote.id === id);\n      if (anecdote) {\n        anecdote.votes += 1;\n      }\n    },\n    createAnecdote: (state, action) => {\n      state.push(action.payload);\n    }\n  }\n});\nconst anecdoteReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'VOTE':\n      const id = action.payload.id;\n      return state.map(anecdote => {\n        if (anecdote.id === id) {\n          return {\n            ...anecdote,\n            votes: anecdote.votes + 1\n          };\n        }\n        return anecdote;\n      });\n    case 'NEW_ANECDOTE':\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\nexport default anecdoteReducer;","map":{"version":3,"names":["createSlice","anecdotesAtStart","getId","Math","random","toFixed","asObject","anecdote","content","id","votes","incrementVote","type","payload","createAnecdote","initialState","map","anecdoteSlice","name","reducers","state","action","find","push","anecdoteReducer"],"sources":["/home/erikpeteri/FullStackOpen/osa6/redux-anecdotes/src/reducers/anecdoteReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst anecdotesAtStart = [\n  'If it hurts, do it more often',\n  'Adding manpower to a late software project makes it later!',\n  'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n  'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n  'Premature optimization is the root of all evil.',\n  'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n]\n\nconst getId = () => (100000 * Math.random()).toFixed(0)\n\nconst asObject = (anecdote) => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  }\n}\n\nexport const incrementVote = (id) => {\n  return {\n    type: 'VOTE',\n    payload: {\n      id: id\n    }\n  }\n}\n\nexport const createAnecdote = (content) => {\n  return {\n    type: 'NEW_ANECDOTE',\n    payload: {\n      content,\n      id: getId(),\n      votes: 0\n  }}\n}\n\nconst initialState = anecdotesAtStart.map(asObject)\n\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: initialState,\n  reducers: {\n    incrementVote: (state, action) => {\n      const id = action.payload.id;\n      const anecdote = state.find((anecdote) => anecdote.id === id);\n      if (anecdote) {\n        anecdote.votes += 1;\n      }\n    },\n    createAnecdote: (state, action) => {\n      state.push(action.payload);\n    },\n  },\n});\n\nconst anecdoteReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case 'VOTE':\n      const id = action.payload.id\n      return state.map(anecdote => {\n        if (anecdote.id === id) {\n          return {\n            ...anecdote,\n            votes: anecdote.votes + 1\n          }\n        }\n        return anecdote\n      })\n    case 'NEW_ANECDOTE':\n      return [...state, action.payload]\n    default:\n      return state\n  }\n}\n\nexport default anecdoteReducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG,CACvB,+BAA+B,EAC/B,4DAA4D,EAC5D,8LAA8L,EAC9L,iHAAiH,EACjH,iDAAiD,EACjD,oLAAoL,CACrL;AAED,MAAMC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAGC,IAAI,CAACC,MAAM,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;AAEvD,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAC7B,OAAO;IACLC,OAAO,EAAED,QAAQ;IACjBE,EAAE,EAAEP,KAAK,EAAE;IACXQ,KAAK,EAAE;EACT,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIF,EAAE,IAAK;EACnC,OAAO;IACLG,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE;MACPJ,EAAE,EAAEA;IACN;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIN,OAAO,IAAK;EACzC,OAAO;IACLI,IAAI,EAAE,cAAc;IACpBC,OAAO,EAAE;MACPL,OAAO;MACPC,EAAE,EAAEP,KAAK,EAAE;MACXQ,KAAK,EAAE;IACX;EAAC,CAAC;AACJ,CAAC;AAED,MAAMK,YAAY,GAAGd,gBAAgB,CAACe,GAAG,CAACV,QAAQ,CAAC;AAEnD,MAAMW,aAAa,GAAGjB,WAAW,CAAC;EAChCkB,IAAI,EAAE,WAAW;EACjBH,YAAY,EAAEA,YAAY;EAC1BI,QAAQ,EAAE;IACRR,aAAa,EAAE,CAACS,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMZ,EAAE,GAAGY,MAAM,CAACR,OAAO,CAACJ,EAAE;MAC5B,MAAMF,QAAQ,GAAGa,KAAK,CAACE,IAAI,CAAEf,QAAQ,IAAKA,QAAQ,CAACE,EAAE,KAAKA,EAAE,CAAC;MAC7D,IAAIF,QAAQ,EAAE;QACZA,QAAQ,CAACG,KAAK,IAAI,CAAC;MACrB;IACF,CAAC;IACDI,cAAc,EAAE,CAACM,KAAK,EAAEC,MAAM,KAAK;MACjCD,KAAK,CAACG,IAAI,CAACF,MAAM,CAACR,OAAO,CAAC;IAC5B;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,eAAe,GAAG,YAAkC;EAAA,IAAjCJ,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EAEnD,QAAQA,MAAM,CAACT,IAAI;IACjB,KAAK,MAAM;MACT,MAAMH,EAAE,GAAGY,MAAM,CAACR,OAAO,CAACJ,EAAE;MAC5B,OAAOW,KAAK,CAACJ,GAAG,CAACT,QAAQ,IAAI;QAC3B,IAAIA,QAAQ,CAACE,EAAE,KAAKA,EAAE,EAAE;UACtB,OAAO;YACL,GAAGF,QAAQ;YACXG,KAAK,EAAEH,QAAQ,CAACG,KAAK,GAAG;UAC1B,CAAC;QACH;QACA,OAAOH,QAAQ;MACjB,CAAC,CAAC;IACJ,KAAK,cAAc;MACjB,OAAO,CAAC,GAAGa,KAAK,EAAEC,MAAM,CAACR,OAAO,CAAC;IACnC;MACE,OAAOO,KAAK;EAAA;AAElB,CAAC;AAED,eAAeI,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}